services:
  kafka:
    image: apache/kafka:latest
    hostname: broker
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://broker:9093,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
        - app-network

  spark-master:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark_output:/spark_output
      - ./checkpoint_8:/checkpoint_8
    networks:
      - app-network

  spark-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - shared_data:/spark_output
      - ./checkpoint_8:/checkpoint_8
    networks:
      - app-network

  spark-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark-app-reddit
    depends_on:
      - spark-master
      - spark-worker
      - kafka
    volumes:
      - ./checkpoint_8:/checkpoint_8
      - shared_data:/spark_output
    command: |
      bash -c "
        echo 'Waiting for Kafka to be ready...'
        sleep 20
        echo 'Submitting Spark application...'
        cd /app && ls -la
        /opt/bitnami/spark/bin/spark-submit --master spark://spark-master:7077 --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0,com.mysql:mysql-connector-j:8.2.0 --conf spark.jars.ivy=/tmp/.ivy /app/reddit_sentiment.py
      "
    networks:
      - app-network

  producer-app:
    build:
      context: .
      dockerfile: /app/producer/Dockerfile
    container_name: kafka-topic-producer
    depends_on:
      - kafka
    networks:
      - app-network

  excel-generator:
    build:
      context: .
      dockerfile: /app/data_aggregator/Dockerfile
    container_name: excel-generator
    volumes:
      - shared_data:/spark_output
      - ./excel_data:/excel_output
      - ./final_csv:/final_csv
    depends_on:
      - spark-app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  shared_data:
